<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "./mybatis-3-mapper.dtd">
<mapper namespace="com.elementwin.bs.service.mapper.RevisitImportMapper">

	<!-- Model ORM映射 -->
	<resultMap id="RevisitImport" type="RevisitImport">
	</resultMap>
	<resultMap id="RevisitImportData" type="RevisitImportData">
	</resultMap>
	
	<!-- 通用CRUD: begin  -->
	<select id="get" parameterType="Long" resultType="RevisitImport">
		SELECT self.*
	    FROM revisit_import self
	    WHERE self.id=#{id}
	</select>
	
	<insert id="create" parameterType="RevisitImport" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO revisit_import(
			 org_id, file_uuid, file_name, count, fail_reason, request_help, update_file_uuid, update_file_name, status, comment, update_time, update_by, create_by
		)
		VALUES(
			 #{orgId}, #{fileUuid}, #{fileName}, #{count}, #{failReason}, #{requestHelp}, #{updateFileUuid}, #{updateFileName}, #{status}, #{comment}, #{updateTime}, #{updateBy}, #{createBy}
		)
	</insert>

	<update id="update" parameterType="RevisitImport">
		UPDATE revisit_import 
		SET org_id=#{orgId}, file_uuid=#{fileUuid}, file_name=#{fileName}, count=#{count}, fail_reason=#{failReason}, request_help=#{requestHelp}, update_file_uuid=#{updateFileUuid}, update_file_name=#{updateFileName}, status=#{status}, comment=#{comment}, update_time=CURRENT_TIMESTAMP, update_by=#{updateBy}
		WHERE id=#{id}
	</update>
	
	<delete id="delete" parameterType="Long">
		DELETE FROM revisit_import WHERE id=#{id}
	</delete>
	
	<sql id="searchQuery">
    	<if test="org_id != null">
    	self.org_id=#{org_id}
    	</if>
    	<if test="file_uuid != null">
    	 AND self.file_uuid=#{file_uuid}
    	</if>
    	<if test="file_name != null">
    	 AND self.file_name like CONCAT('%',#{file_name},'%')
    	</if>
    	<if test="update_file_uuid != null">
    	 AND self.update_file_uuid=#{update_file_uuid}
    	</if>
    	<if test="update_file_name != null">
    	 AND self.update_file_name like CONCAT('%',#{update_file_name},'%')
    	</if>
    	<if test="count != null">
    	 AND self.count=#{count}
    	</if>
    	<if test="fail_reason != null">
    	 AND self.fail_reason like CONCAT('%',#{fail_reason},'%')
    	</if>
    	<if test="request_help != null">
    	 AND self.request_help=#{request_help}
    	</if>
    	<if test="status != null">
    	 AND self.status=#{status}
    	</if>
    	<if test="comment != null">
    	 AND self.comment like CONCAT('%',#{comment},'%')
    	</if>
    	<if test="createByName != null">
    	 AND ou.realname like CONCAT('%',#{createByName},'%')
    	</if>
    	<if test="updateByName != null">
    	 AND u.realname like CONCAT('%',#{updateByName},'%')
    	</if>
    	
	</sql>
	<select id="getListCount" parameterType="Map" resultType="Integer" useCache="false">
		SELECT count(self.id)
	    FROM revisit_import self
	    LEFT JOIN organization org ON self.org_id=org.id
	    LEFT JOIN org_user ou ON self.create_by=ou.id
	    LEFT JOIN user u ON self.update_by=u.id
	    <where>
	    	<include refid="searchQuery"></include>
	    </where>
	</select>
	
	<select id="getList" parameterType="Map" resultType="RevisitImport" useCache="false">
		SELECT self.*, org.short_name as orgName, ou.realname as createByName, u.realname as updateByName
	    FROM revisit_import self
	    LEFT JOIN organization org ON self.org_id=org.id
	    LEFT JOIN org_user ou ON self.create_by=ou.id
	    LEFT JOIN user u ON self.update_by=u.id
	    <where>
	    	<include refid="searchQuery"></include>
	    </where>
	    ORDER BY self.id DESC
	    <choose>
	    	<when test="begin != null">
				LIMIT #{begin}, #{pageSize}
	    	</when>
	    	<when test="limitCount != null">
				LIMIT #{limitCount}	    		
	    	</when>
	    </choose>
	</select>
	<!-- 通用CRUD: end -->

	<!-- 扩展SQL: begin -->
	<insert id="createData" parameterType="RevisitImportData">
		INSERT INTO revisit_import_data(
			 data_import_id, org_id, row_index, service_end_date, is_dealer_store, car_frame_no, car_license_no, car_brand, car_model_type, customer_manager, car_driver, car_driver_phone, car_owner, address, service_type, mileage, is_member, is_out_insure, active
		)
		VALUES(
			 #{dataImportId}, #{orgId}, #{rowIndex}, #{serviceEndDate}, #{isDealerStore}, #{carFrameNo}, #{carLicenseNo}, #{carBrand}, #{carModelType}, #{customerManager}, #{carDriver}, #{carDriverPhone}, #{carOwner}, #{address}, #{serviceType}, #{mileage}, #{isMember}, #{isOutInsure}, #{active}
		)
	</insert>
	
	<select id="getDataList" parameterType="Map" resultType="RevisitImportData">
		SELECT self.*
	    FROM revisit_import_data self
	    <where>
	    	<if test="data_import_id != null">
	    	self.data_import_id=#{data_import_id}
	    	</if>
	    	<if test="org_id != null">
	    	 AND self.org_id=#{org_id}
	    	</if>
	    </where>
	    ORDER BY self.id DESC
	</select>
	
	<select id="findDuplicateData" parameterType="RevisitImportData" resultType="Integer">
		SELECT COUNT(self.id)
		FROM revisit_task self
		WHERE self.org_id=#{orgId} AND self.car_frame_no=#{carFrameNo} AND self.service_end_date=#{serviceEndDate} AND self.status != 'STOP'
	</select>
	
	<select id="getSimpleImportDataList" parameterType="Map" resultType="RevisitImportData">
		SELECT self.service_end_date, self.customer_manager, self.service_type
	    FROM revisit_import_data self
	    WHERE self.org_id=#{org_id} 
	    <if test="beginDate != null">
	    	AND self.service_end_date >= #{beginDate}
	    </if>
	    <if test="endDate != null">
	     AND self.service_end_date &lt;= #{endDate}
	    </if>
	</select>
	<!-- 扩展SQL: end -->
</mapper>